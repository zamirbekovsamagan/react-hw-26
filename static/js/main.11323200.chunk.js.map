{"version":3,"sources":["components/Cart/CartItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/ProductsForm.module.css","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","utils/constants/general.js","store/slices/cartSlice.js","store/slices/uiSlice.js","store/slices/cartActions.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/UI/Notification.js","components/Shop/ProductsForm.js","App.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","CartItem","item","title","price","description","itemprice","details","Cart","cartItems","useSelector","state","cart","fetchedItems","console","log","map","id","itemId","BASE_URL","cartSlice","createSlice","name","initialState","reducers","getDataFromServer","action","data","payload","arr","key","push","cartActions","actions","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","hideNotification","uiActions","getData","dispatch","fetch","then","response","json","CartButton","useDispatch","button","onClick","badge","length","MainHeader","header","Layout","Notification","specialClasses","error","success","cssClasses","ProductsForm","useState","setData","InputChangeHandler","event","value","target","Math","random","toString","formIsValid","trim","form","onSubmit","preventDefault","method","body","JSON","stringify","ok","Error","catch","type","onChange","disabled","isInitial","App","isShow","ui","useEffect","timer","setTimeout","clearTimeout","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11323200.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__ARC-8\",\"details\":\"CartItem_details__3qkXU\",\"quantity\":\"CartItem_quantity__1GhbU\",\"price\":\"CartItem_price__2OKQz\",\"itemprice\":\"CartItem_itemprice__1k3Z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Hda6\",\"error\":\"Notification_error__3oHQq\",\"success\":\"Notification_success__2BwY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3kcIq\",\"badge\":\"CartButton_badge__1IJxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__22ioA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2WDf9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__PHARy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProductsForm_form__2l4mZ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const { title, price, description } = props.item;\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          <span className={classes.itemprice}>(${price}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n          <p>{description}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.fetchedItems);\n  console.log(cartItems)\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.itemId}\n            item={{\n              id: item.id,\n              title: item.title,\n              price: item.price,\n              description: item.description\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","export const BASE_URL = 'https://cart-911dc-default-rtdb.firebaseio.com/'\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  fetchedItems: [],\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    getDataFromServer(state, action) {\n      let data = action.payload;\n      let arr =[]\n      for (let key in data) {\n        arr.push({\n          id: data[key].id,\n          title: data[key].title,\n          price: data[key].price,\n          description: data[key].description,\n        });\n      }\n      state.fetchedItems = arr\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartIsVisible: false,\n  notification: null,\n};\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: initialState,\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n    hideNotification(state) {\n      state.notification = null\n    }\n  },\n});\n\nexport const uiActions = uiSlice.actions;\nexport default uiSlice;\n","import { BASE_URL } from \"../../utils/constants/general\";\nimport { cartActions } from \"./cartSlice\";\nimport { uiActions } from \"./uiSlice\";\n\nexport const sendCartData = (cart) => {\n    return (dispatch) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending data o cart !\",\n        })\n      );\n      fetch(`${BASE_URL}/cart.json`, {\n        method: \"POST\",\n        body: JSON.stringify(cart),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Sending cart data failed\");\n          }\n          dispatch(\n            uiActions.showNotification({\n              status: \"success\",\n              title: \"Success !\",\n              message: \"Sent cart data successfully !\",\n            })\n          );\n          return response.json();\n        })\n        .catch((error) => {\n          dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"Error !\",\n              message: \"Sending cart data failed !\",\n            })\n          );\n        });\n    }\n  }\n\nexport const getData = ()=>{\n  return (dispatch) =>{\n    fetch(`${BASE_URL}/cart.json`)\n    .then(response =>response.json())\n    .then(data=>{\n      dispatch(cartActions.getDataFromServer(data))\n    })\n  }\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getData } from '../../store/slices/cartActions';\nimport { uiActions } from '../../store/slices/uiSlice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const cart = useSelector((state) => state.cart.fetchedItems)\n  const dispatch = useDispatch()\n\n  const toggleHandler = () => {\n    dispatch(uiActions.toggle()) // dispatch({type: 'increment', ....})\n    dispatch(getData())\n  }\n\n  return (\n    <button className={classes.button} onClick={toggleHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cart.length}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getData, sendCartData } from \"../../store/slices/cartActions\";\nimport classes from \"./ProductsForm.module.css\";\n\nconst ProductsForm = () => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    title: \"\",\n    price: \"\",\n    description: \"\",\n  });\n\n  const InputChangeHandler = (event) => {\n    const value = event.target.value;\n    setData({\n      ...data,\n      id: Math.random().toString(),\n      [event.target.name]: value,\n    });\n  };\n\n  let formIsValid = data.title.trim() !== '' && data.price.trim() !== '' && data.description.trim() !== ''\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(sendCartData(data));\n    dispatch(getData());\n    setData({\n      title: \"\",\n      price: \"\",\n      description: \"\",\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <h2>Add product</h2>\n      <label>Title</label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={data.title}\n        onChange={InputChangeHandler}\n      />\n      <label>Price</label>\n      <input\n        type=\"number\"\n        name=\"price\"\n        value={data.price}\n        onChange={InputChangeHandler}\n      />\n      <label>Description</label>\n      <textarea\n        type=\"text\"\n        name=\"description\"\n        value={data.description}\n        onChange={InputChangeHandler}\n      />\n      <button disabled={!formIsValid}>Add</button>\n    </form>\n  );\n};\n\nexport default ProductsForm;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Notification from \"./components/UI/Notification\";\nimport { uiActions } from \"./store/slices/uiSlice\";\nimport ProductsForm from \"./components/Shop/ProductsForm\";\n\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch();\n  const isShow = useSelector((state) => state.ui.cartIsVisible);\n  const notification = useSelector((state) => state.ui.notification);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    let timer;\n    if (notification) {\n      timer = setTimeout(() => {\n        dispatch(uiActions.hideNotification());\n      }, 3000);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [notification, dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n  }, [cart]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        <ProductsForm />\n        {isShow && <Cart />}\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartSlice from \"./slices/cartSlice\";\nimport uiSlice from \"./slices/uiSlice\";\n\n\nconst store = configureStore({\n    reducer: {\n        ui: uiSlice.reducer,\n        cart: cartSlice.reducer\n    }\n})\n\nexport default store","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}